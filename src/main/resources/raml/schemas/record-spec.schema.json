{
    "type": "object",
    "properties": {
        "targetBaseUrl": {
            "type": "string",
            "description": "The base URL of the target API to be recorded."
        },
        "filters": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "request-pattern.schema.json",
                    "description": "If set, only record requests matching this pattern"
                },
                "ids": {
                    "type": "array",
                    "description": "The UUIDs of the exact requests to be recorded (only of practical use when snapshot recording).",
                    "items": {
                        "type": "string"
                    }
                },
                "allowNonProxied": {
                    "type": "boolean",
                    "description": "If true, also record requests that were *not* proxied to another URL."
                }
            }
        },

        "captureHeaders": {
            "description": "Headers from the request to include in the generated stub mappings, mapped to parameter objects. The only parameter available is \"caseInsensitive\", which defaults to false",
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "properties": {
                    "caseInsensitive": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "example": [
                {
                    "Accept": {}
                },
                {
                    "Accept": {},
                    "Content-Type": {
                        "caseInsensitive": true
                    }
                }
            ]
        },
        "extractBodyCriteria": {
            "description": "Criteria for extracting response bodies to a separate file instead of including it in the stub mapping",
            "type": "object",
            "properties": {
                "binarySizeThreshold": {
                    "description": "Size threshold for extracting binary response bodies. Default unit is bytes",
                    "type": "string",
                    "default": "0",
                    "example": [
                        "56 kb",
                        "10 Mb",
                        "18.2 GB",
                        "255"
                    ]
                },
                "textSizeThreshold": {
                    "description": "Size threshold for extracting text response bodies. Default unit is bytes",
                    "type": "string",
                    "default": "0",
                    "example": [
                        "56 kb",
                        "10 Mb",
                        "18.2 GB",
                        "255"
                    ]
                }
            },
            "example": [{
                "textSizeThreshold" : "2 kb",
                "binarySizeThreshold" : "1 Mb"
            }]
        },
        "requestBodyPattern": {
            "description": "Control the request body matcher used in generated stub mappings",
            "$ref": "content-pattern.schema.json"
        },
        "persist": {
            "description": "Whether to save stub mappings to the file system or just return them",
            "type": "boolean",
            "default": true
        },
        "repeatsAsScenarios": {
            "description": "When true, duplicate requests will be added to a Scenario. When false, duplicates are discarded",
            "type": "boolean",
            "default": true
        },
        "transformerParameters": {
            "description": "List of names of stub mappings transformers to apply to generated stubs",
            "type": "object"
        },
        "transformers": {
            "description": "Parameters to pass to stub mapping transformers",
            "type": "array",
            "items": {
                "type": "string"
            }
        }
    }
}
